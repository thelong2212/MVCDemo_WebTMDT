@model WebSiteBanHangMVC.Models.CTSanPham
@{
    ViewBag.Title = "Chi tiết sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    bool isNull = false;
    if (Model == null)
    {
        isNull = true;
    }
}

@section header{
    CT Sản Phẩm
}
@section jsFooter{

}
<title>@ViewBag.Title</title>
<style>
    input, select, textarea {
        width: 70%;
    }
</style>
<div class="form-horizontal">
    @{
        if (!isNull)
        {
            <div>
                <div>
                    <div>
                        <div>
                            Chi tiết sản phẩm.
                        </div>
                        <div>
                            <div>
                                <div>
                                    @using (Html.BeginForm("EditDetailProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.HiddenFor(model => model.CTSanPhamID)
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group" style="margin-bottom: 30px;">
                                            @Html.LabelFor(model => model.SanPham.TenSanPham, htmlAttributes: new { @class = " col-md-3" })
                                            <div class="col-md-5">

                                                @Html.TextBoxFor(model => model.SanPham.TenSanPham, new { required = true, htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.SanPham.TenSanPham, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group" style="margin-bottom: 30px;">
                                            @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = " col-md-3" })
                                            <div class="col-md-5">

                                                @Html.TextBoxFor(model => model.SoLuong, new { required = true, htmlAttributes = new { @class = "form-control col-md-7" } })
                                                @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group" style="margin-bottom: 30px;">
                                            @Html.LabelFor(model => model.ChiTiet, htmlAttributes: new { @class = " col-md-3" })
                                            <div class="col-md-5">

                                                @Html.TextBoxFor(model => model.ChiTiet, new { required = true, htmlAttributes = new { @class = "form-control col-md-7" } })
                                                @Html.ValidationMessageFor(model => model.ChiTiet, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group" style="margin-bottom: 30px;">
                                            @Html.LabelFor(model => model.GhiChu, htmlAttributes: new { @class = " col-md-3" })
                                            <div class="col-md-5">

                                                @Html.TextBoxFor(model => model.GhiChu, new {  htmlAttributes = new { @class = "form-control col-md-7" } })
                                                @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group" style="margin-bottom: 30px;">
                                            @Html.LabelFor(model => model.AnhSanPham, new { @class = "col-md-3" })
                                            <div class="col-md-5">
                                                <input type="file" title="search image" id="file" name="file" onchange="show(this)" />
                                                <br>
                                                <img id="user_img" width="90" style="border:solid;width: 70%;display: block;" src="@Url.Content(Model.AnhSanPham)" height="200" alt="Ảnh sản phẩm...">
                                                @Html.ValidationMessageFor(model => model.AnhSanPham)
                                                @Html.HiddenFor(model => model.AnhSanPham)
                                            </div>
                                        </div>

                                        <div class="form-group" style="text-align:center;">
                                            <div class="col-md-10" style="padding-left: 0px;padding-right: 38px;">
                                                <input style="width: 20%;" type="submit" value="Cập nhật" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <h4 style="color:red"> Bạn phải thêm CT cho sản phẩm</h4>
            <br />
            <div class="col-md-4" style="padding-left:0px;">
                <a class="btn btn-primary" href="/Admin/Product/CreateDetailsProduct?sanPhamID=@ViewBag.SanPhamID">Thêm ngay</a>
            </div>
        }
    }
</div>
<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>