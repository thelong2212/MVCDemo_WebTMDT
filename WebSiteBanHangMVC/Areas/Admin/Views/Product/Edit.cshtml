@model WebSiteBanHangMVC.Models.SanPham
@{
    ViewBag.Title = "Sửa thông tin sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section header{
    Cập nhật sản phẩm
}
<style>
    .mr {
        margin-top: 7px;
    }

    body {
        font-family: Arial, Sans-serif;
    }

    .error {
        color: red;
        font-family: verdana, Helvetica;
    }

    .input {
        display: block;
        width: 100%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    }

    input, select, textarea {
        width: 70%;
    }
</style>
<div class="form-horizontal">
    <div>
        <div>
            <h3>
                Nhập thông tin sản phẩm.
            </h3>
            <div>
                <div>
                    <div>
                        @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.SanPhamID)
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.TenSanPham, htmlAttributes: new { @class = " col-md-3" })
                                <div class="col-md-5">

                                    @Html.TextBoxFor(model => model.TenSanPham, new { required = true, htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TenSanPham, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.MaSanPham, htmlAttributes: new { @class = " col-md-3" })
                                <div class="col-md-5">

                                    @Html.TextBoxFor(model => model.MaSanPham, new { required = true, htmlAttributes = new { @class = "form-control col-md-7" } })
                                    @Html.ValidationMessageFor(model => model.MaSanPham, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.ThongTinSanPham, htmlAttributes: new { @class = " col-md-3" })
                                <div class="col-md-5">

                                    @Html.TextBoxFor(model => model.ThongTinSanPham, new { required = true, htmlAttributes = new { @class = "form-control col-md-7" } })
                                    @Html.ValidationMessageFor(model => model.ThongTinSanPham, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.GiaSanPham, htmlAttributes: new { @class = " col-md-3" })
                                <div class="col-md-5">

                                    @Html.TextBoxFor(model => model.GiaSanPham, new { type = "number", required = true, htmlAttributes = new { @class = "form-control col-md-7" } })
                                    @Html.ValidationMessageFor(model => model.GiaSanPham, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.GhiChu, htmlAttributes: new { @class = " col-md-3" })
                                <div class="col-md-5">

                                    @Html.TextAreaFor(model => model.GhiChu, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                                    @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LoaiSanPhamID, htmlAttributes: new { @class = "col-md-3" })
                                <div class="col-md-5">
                                    @Html.DropDownListFor(model => model.LoaiSanPhamID, null, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LoaiSanPhamID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.AnhSanPham, new { @class = "col-md-3" })
                                <div class="col-md-5">
                                    <input type="file" title="search image" id="file" name="file" onchange="show(this)" />
                                    <br>
                                    <img id="user_img" width="90" style="border:solid;width: 70%;display: block;" src="@Url.Content(Model.AnhSanPham)" height="200" alt="Ảnh sản phẩm...">
                                    @Html.ValidationMessageFor(model => model.AnhSanPham)
                                    @Html.HiddenFor(model => model.AnhSanPham)
                                </div>
                            </div>
                            <div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.Hot, htmlAttributes: new { @class = " col-md-3" })
                                <div class="col-md-4" style="width:30%;">
                                    @Html.EditorFor(model => model.Hot, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                                    @Html.ValidationMessageFor(model => model.Hot, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="form-group" style="margin-bottom: 30px;">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = " col-md-3" })
                                <div class="col-md-5">
                                    @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                            <div class="form-group" style="margin-bottom: 30px;">
                                <div class="col-md-10" style="text-align: center;">
                                    <input style="width:10%;" type="submit" name="submit" value="Cập nhật" class="btn btn-primary" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>
<script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>
    <script>
        jQuery.validator.setDefaults({
            debug: true,
            success: "valid"
        });
        $("#sanPham").validate({
            rules:
                {
                    TenSanPham:
                        {
                            required: true
                        },
                    MaSanPham:
                        {
                            required: true
                        },
                    GiaSanPham:
                        {
                            required: true,
                            number: true
                        }
                },
            messages: {
                TenSanPham: {
                    required: "Nhập tên sản phẩm",
                },
                MaSanPham: {
                    required: "Nhập vào mã sản phẩm",
                },
                GiaSanPham: {
                    required: "Nhập thông tin giá sản phẩm",
                    number: "Nhập vào 1 số"
                }
            }
        });
    </script>